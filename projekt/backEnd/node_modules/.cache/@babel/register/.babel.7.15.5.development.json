{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"filename\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vinah331/Desktop/tdp013/projekt/backEnd/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "var createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nconst {\n  v1: uuidv1,\n  v4: uuidv4\n} = require('uuid');\n\nvar indexRouter = require('./routes/index');\n\nvar usersRouter = require('./routes/users');\n\nvar app = express();\n\nconst corsMiddleware = require('./cors');\n\napp.options('*', corsMiddleware);\napp.use(corsMiddleware); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', indexRouter);\napp.use('/users', usersRouter); // catch 404 and forward to error handler //använd inte!\n// app.use(function(req, res, next) {\n//   next(createError(404));\n// });\n// error handler\n// app.use(function(err, req, res, next) {\n//   // set locals, only providing error in development\n//   res.locals.message = err.message;\n//   res.locals.error = req.app.get('env') === 'development' ? err : {};\n//   // render the error page\n//   res.status(err.status || 500);\n//   res.render('error');\n// });\n\nconst {\n  MongoClient\n} = require('mongodb');\n\nlet url = \"mongodb://localhost:27017/\";\n\nfunction startServer(port) {\n  let server = app.listen(3000, () => {\n    let host = server.address().address;\n    let port = server.address().port;\n    console.log(`Lyssnar på http://${host}:${port}`);\n  });\n  return server;\n}\n\nfunction clearDatabase() {\n  MongoClient.dropDatabase();\n}\n/*\nlet server = app.listen(8888, () => {\n  let host = server.address().address\n  let port = server.address().port\n  console.log(`Lyssnar på http://${host}:${port}`)\n })*/\n\n\nstartServer();\nmodule.exports = startServer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsInYxIiwidXVpZHYxIiwidjQiLCJ1dWlkdjQiLCJpbmRleFJvdXRlciIsInVzZXJzUm91dGVyIiwiYXBwIiwiY29yc01pZGRsZXdhcmUiLCJvcHRpb25zIiwidXNlIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJzdGF0aWMiLCJNb25nb0NsaWVudCIsInVybCIsInN0YXJ0U2VydmVyIiwicG9ydCIsInNlcnZlciIsImxpc3RlbiIsImhvc3QiLCJhZGRyZXNzIiwiY29uc29sZSIsImxvZyIsImNsZWFyRGF0YWJhc2UiLCJkcm9wRGF0YWJhc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXpCOztBQUNBLElBQUlDLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFsQjs7QUFDQSxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUNBLElBQUlJLE1BQU0sR0FBR0osT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUNKSyxFQUFBQSxFQUFFLEVBQUVDLE1BREE7QUFFSkMsRUFBQUEsRUFBRSxFQUFFQztBQUZBLElBR0ZSLE9BQU8sQ0FBQyxNQUFELENBSFg7O0FBS0EsSUFBSVMsV0FBVyxHQUFHVCxPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBQ0EsSUFBSVUsV0FBVyxHQUFHVixPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBRUEsSUFBSVcsR0FBRyxHQUFHVixPQUFPLEVBQWpCOztBQUNBLE1BQU1XLGNBQWMsR0FBR1osT0FBTyxDQUFDLFFBQUQsQ0FBOUI7O0FBQ0FXLEdBQUcsQ0FBQ0UsT0FBSixDQUFZLEdBQVosRUFBaUJELGNBQWpCO0FBQ0FELEdBQUcsQ0FBQ0csR0FBSixDQUFRRixjQUFSLEUsQ0FFQTs7QUFDQUQsR0FBRyxDQUFDSSxHQUFKLENBQVEsT0FBUixFQUFpQmIsSUFBSSxDQUFDYyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsT0FBckIsQ0FBakI7QUFDQU4sR0FBRyxDQUFDSSxHQUFKLENBQVEsYUFBUixFQUF1QixNQUF2QjtBQUVBSixHQUFHLENBQUNHLEdBQUosQ0FBUVYsTUFBTSxDQUFDLEtBQUQsQ0FBZDtBQUNBTyxHQUFHLENBQUNHLEdBQUosQ0FBUWIsT0FBTyxDQUFDaUIsSUFBUixFQUFSO0FBQ0FQLEdBQUcsQ0FBQ0csR0FBSixDQUFRYixPQUFPLENBQUNrQixVQUFSLENBQW1CO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQW5CLENBQVI7QUFDQVQsR0FBRyxDQUFDRyxHQUFKLENBQVFYLFlBQVksRUFBcEI7QUFDQVEsR0FBRyxDQUFDRyxHQUFKLENBQVFiLE9BQU8sQ0FBQ29CLE1BQVIsQ0FBZW5CLElBQUksQ0FBQ2MsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUjtBQUVBTixHQUFHLENBQUNHLEdBQUosQ0FBUSxHQUFSLEVBQWFMLFdBQWI7QUFDQUUsR0FBRyxDQUFDRyxHQUFKLENBQVEsUUFBUixFQUFrQkosV0FBbEIsRSxDQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUdBLE1BQU07QUFBQ1ksRUFBQUE7QUFBRCxJQUFnQnRCLE9BQU8sQ0FBQyxTQUFELENBQTdCOztBQUNBLElBQUl1QixHQUFHLEdBQUcsNEJBQVY7O0FBR0EsU0FBU0MsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkI7QUFDekIsTUFBSUMsTUFBTSxHQUFHZixHQUFHLENBQUNnQixNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNO0FBQ2xDLFFBQUlDLElBQUksR0FBR0YsTUFBTSxDQUFDRyxPQUFQLEdBQWlCQSxPQUE1QjtBQUNBLFFBQUlKLElBQUksR0FBR0MsTUFBTSxDQUFDRyxPQUFQLEdBQWlCSixJQUE1QjtBQUNBSyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxxQkFBb0JILElBQUssSUFBR0gsSUFBSyxFQUE5QztBQUNBLEdBSlcsQ0FBYjtBQUtBLFNBQU9DLE1BQVA7QUFDRDs7QUFFRCxTQUFTTSxhQUFULEdBQXlCO0FBQ3ZCVixFQUFBQSxXQUFXLENBQUNXLFlBQVo7QUFDRDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUNULFdBQVc7QUFFWFUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWCxXQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92aW5haDMzMS9EZXNrdG9wL3RkcDAxMy9wcm9qZWt0L2JhY2tFbmQvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUVycm9yID0gcmVxdWlyZSgnaHR0cC1lcnJvcnMnKTtcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG52YXIgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpO1xudmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xuY29uc3QgeyBcbiAgdjE6IHV1aWR2MSxcbiAgdjQ6IHV1aWR2NCxcbn0gPSByZXF1aXJlKCd1dWlkJyk7XG5cbnZhciBpbmRleFJvdXRlciA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4Jyk7XG52YXIgdXNlcnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VycycpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgY29yc01pZGRsZXdhcmUgPSByZXF1aXJlKCcuL2NvcnMnKTtcbmFwcC5vcHRpb25zKCcqJywgY29yc01pZGRsZXdhcmUpO1xuYXBwLnVzZShjb3JzTWlkZGxld2FyZSk7XG5cbi8vIHZpZXcgZW5naW5lIHNldHVwXG5hcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2phZGUnKTtcblxuYXBwLnVzZShsb2dnZXIoJ2RldicpKTtcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xuYXBwLnVzZShjb29raWVQYXJzZXIoKSk7XG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICdwdWJsaWMnKSkpO1xuXG5hcHAudXNlKCcvJywgaW5kZXhSb3V0ZXIpO1xuYXBwLnVzZSgnL3VzZXJzJywgdXNlcnNSb3V0ZXIpO1xuXG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyIC8vYW52w6RuZCBpbnRlIVxuLy8gYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuLy8gICBuZXh0KGNyZWF0ZUVycm9yKDQwNCkpO1xuLy8gfSk7XG5cbi8vIGVycm9yIGhhbmRsZXJcbi8vIGFwcC51c2UoZnVuY3Rpb24oZXJyLCByZXEsIHJlcywgbmV4dCkge1xuLy8gICAvLyBzZXQgbG9jYWxzLCBvbmx5IHByb3ZpZGluZyBlcnJvciBpbiBkZXZlbG9wbWVudFxuLy8gICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbi8vICAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5hcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50JyA/IGVyciA6IHt9O1xuXG4vLyAgIC8vIHJlbmRlciB0aGUgZXJyb3IgcGFnZVxuLy8gICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcbi8vICAgcmVzLnJlbmRlcignZXJyb3InKTtcbi8vIH0pO1xuXG5cbmNvbnN0IHtNb25nb0NsaWVudH0gPSByZXF1aXJlKCdtb25nb2RiJyk7XG5sZXQgdXJsID0gXCJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3L1wiO1xuXG5cbmZ1bmN0aW9uIHN0YXJ0U2VydmVyKHBvcnQpIHtcbiAgbGV0IHNlcnZlciA9IGFwcC5saXN0ZW4oMzAwMCwgKCkgPT4ge1xuICAgIGxldCBob3N0ID0gc2VydmVyLmFkZHJlc3MoKS5hZGRyZXNzXG4gICAgbGV0IHBvcnQgPSBzZXJ2ZXIuYWRkcmVzcygpLnBvcnRcbiAgICBjb25zb2xlLmxvZyhgTHlzc25hciBww6UgaHR0cDovLyR7aG9zdH06JHtwb3J0fWApXG4gICB9KVxuICByZXR1cm4oc2VydmVyKVxufVxuXG5mdW5jdGlvbiBjbGVhckRhdGFiYXNlKCkge1xuICBNb25nb0NsaWVudC5kcm9wRGF0YWJhc2UoKTtcbn1cbi8qXG5sZXQgc2VydmVyID0gYXBwLmxpc3Rlbig4ODg4LCAoKSA9PiB7XG4gIGxldCBob3N0ID0gc2VydmVyLmFkZHJlc3MoKS5hZGRyZXNzXG4gIGxldCBwb3J0ID0gc2VydmVyLmFkZHJlc3MoKS5wb3J0XG4gIGNvbnNvbGUubG9nKGBMeXNzbmFyIHDDpSBodHRwOi8vJHtob3N0fToke3BvcnR9YClcbiB9KSovXG5cbiBzdGFydFNlcnZlcigpXG5cbiBtb2R1bGUuZXhwb3J0cyA9IHN0YXJ0U2VydmVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "v1",
        "uuidv1",
        "v4",
        "uuidv4",
        "indexRouter",
        "usersRouter",
        "app",
        "corsMiddleware",
        "options",
        "use",
        "set",
        "join",
        "__dirname",
        "json",
        "urlencoded",
        "extended",
        "static",
        "MongoClient",
        "url",
        "startServer",
        "port",
        "server",
        "listen",
        "host",
        "address",
        "console",
        "log",
        "clearDatabase",
        "dropDatabase",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AACA,MAAM;AACJK,EAAAA,EAAE,EAAEC,MADA;AAEJC,EAAAA,EAAE,EAAEC;AAFA,IAGFR,OAAO,CAAC,MAAD,CAHX;;AAKA,IAAIS,WAAW,GAAGT,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIU,WAAW,GAAGV,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAIW,GAAG,GAAGV,OAAO,EAAjB;;AACA,MAAMW,cAAc,GAAGZ,OAAO,CAAC,QAAD,CAA9B;;AACAW,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiBD,cAAjB;AACAD,GAAG,CAACG,GAAJ,CAAQF,cAAR,E,CAEA;;AACAD,GAAG,CAACI,GAAJ,CAAQ,OAAR,EAAiBb,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAN,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AAEAJ,GAAG,CAACG,GAAJ,CAAQV,MAAM,CAAC,KAAD,CAAd;AACAO,GAAG,CAACG,GAAJ,CAAQb,OAAO,CAACiB,IAAR,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQb,OAAO,CAACkB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAT,GAAG,CAACG,GAAJ,CAAQX,YAAY,EAApB;AACAQ,GAAG,CAACG,GAAJ,CAAQb,OAAO,CAACoB,MAAR,CAAenB,IAAI,CAACc,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AAEAN,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAaL,WAAb;AACAE,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkBJ,WAAlB,E,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,MAAM;AAACY,EAAAA;AAAD,IAAgBtB,OAAO,CAAC,SAAD,CAA7B;;AACA,IAAIuB,GAAG,GAAG,4BAAV;;AAGA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,MAAM,GAAGf,GAAG,CAACgB,MAAJ,CAAW,IAAX,EAAiB,MAAM;AAClC,QAAIC,IAAI,GAAGF,MAAM,CAACG,OAAP,GAAiBA,OAA5B;AACA,QAAIJ,IAAI,GAAGC,MAAM,CAACG,OAAP,GAAiBJ,IAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBH,IAAK,IAAGH,IAAK,EAA9C;AACA,GAJW,CAAb;AAKA,SAAOC,MAAP;AACD;;AAED,SAASM,aAAT,GAAyB;AACvBV,EAAAA,WAAW,CAACW,YAAZ;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAECT,WAAW;AAEXU,MAAM,CAACC,OAAP,GAAiBX,WAAjB",
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/",
      "sourcesContent": [
        "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nconst { \n  v1: uuidv1,\n  v4: uuidv4,\n} = require('uuid');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\n\nvar app = express();\nconst corsMiddleware = require('./cors');\napp.options('*', corsMiddleware);\napp.use(corsMiddleware);\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n\n\n// catch 404 and forward to error handler //använd inte!\n// app.use(function(req, res, next) {\n//   next(createError(404));\n// });\n\n// error handler\n// app.use(function(err, req, res, next) {\n//   // set locals, only providing error in development\n//   res.locals.message = err.message;\n//   res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n//   // render the error page\n//   res.status(err.status || 500);\n//   res.render('error');\n// });\n\n\nconst {MongoClient} = require('mongodb');\nlet url = \"mongodb://localhost:27017/\";\n\n\nfunction startServer(port) {\n  let server = app.listen(3000, () => {\n    let host = server.address().address\n    let port = server.address().port\n    console.log(`Lyssnar på http://${host}:${port}`)\n   })\n  return(server)\n}\n\nfunction clearDatabase() {\n  MongoClient.dropDatabase();\n}\n/*\nlet server = app.listen(8888, () => {\n  let host = server.address().address\n  let port = server.address().port\n  console.log(`Lyssnar på http://${host}:${port}`)\n })*/\n\n startServer()\n\n module.exports = startServer;"
      ]
    },
    "sourceType": "module",
    "mtime": 1633524780772
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"filename\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nconst app = express();\nvar router = express.Router();\n\nconst {\n  MongoClient\n} = require('mongodb');\n\nlet sanitize = require('mongo-sanitize');\n\nconst {\n  v1: uuidv1,\n  v4: uuidv4\n} = require('uuid');\n\nlet url = \"mongodb://localhost:27017/\";\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n})); // Om användaren loggar in,\n// params = användarnamn, hashat lösenord\n// kolla om användarnamn finns, om det finns, kolla om hashat lösenord matchar\n// om det matchar, returnera ett nytt sessionID, lägg även till nytt sessionID\n// i databasen.\n// om inte finns returnera status, baserat på status skriv felmeddelane. \n// returnerna en session ID/Token\n\nrouter.post(\"/login\", (req, res) => {\n  let username = req.body.username;\n  let pw = req.body.password;\n  let myquery = {\n    userID: username,\n    password: pw\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        //Skapar sessionID\n        let sessionIDvalue = uuidv4();\n        let newSessionID = {\n          $set: {\n            sessionID: sessionIDvalue\n          }\n        };\n        dbo.collection(\"users\").updateOne(myquery, newSessionID, function (err, result2) {\n          if (err) {\n            db.close();\n            res.sendStatus(500);\n          } else {\n            db.close();\n            res.status(200).send(sessionIDvalue);\n          }\n        });\n      } else {\n        //If we dont find a result\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om användaren registerar sig,\n// params = användarnamn, hasht lösenord\n// kolla om användarnamn finns, om det finns returna fel, annnars lägg till\n// användare.\n// returnear status (ok)\n\nrouter.post(\"/register\", (req, res) => {\n  let username = req.body.username;\n  let pw = req.body.password;\n  let myquery = {\n    userID: username\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        //Det finns redan en användare med namnet\n        res.sendStatus(500);\n        db.close();\n      } else {\n        //skapa användarobjekt\n        let id = uuidv4();\n        let newUser = {\n          userID: username,\n          password: pw,\n          wall: [],\n          friends: [],\n          requests: [],\n          sessionID: id\n        };\n        dbo.collection('users').insertOne(newUser, function (err, result) {\n          if (err) {\n            throw err;\n          } else {\n            db.close();\n            res.sendStatus(200);\n          }\n        });\n      }\n    });\n  });\n}) / // Om användare loggar ut\n// params = session ID\n// ta bort session ID, returna status\n// returnarar status (ok)\nrouter.patch(\"/logout\", (req, res) => {\n  let id = req.body.sessionID;\n  let myquery = {\n    sessionID: id\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        console.log(\"1\");\n        res.sendStatus(500);\n      } else if (result != null) {\n        console.log(\"2\");\n        let sessionIDvalue = uuidv4();\n        let newSessionID = {\n          $set: {\n            sessionID: sessionIDvalue\n          }\n        };\n        dbo.collection(\"users\").updateOne(myquery, newSessionID, function (err, result2) {\n          if (err) {\n            console.log(\"3\");\n            db.close();\n            res.sendStatus(500);\n          } else {\n            console.log(\"we here\");\n            db.close();\n            res.sendStatus(200);\n          }\n        });\n      } else {\n        //If we dont find a result\n        console.log(result);\n        res.status(500).send(\"nothing found!\");\n        db.close();\n      }\n    });\n  });\n}); // Om inloggad, vill vi ha en friendlist på sidan\n// params = session ID\n// hämtar alla vänner baserat på session ID\n// returnerar en lista på alla vänner\n\nrouter.post('/friends', (req, res) => {\n  let id = req.body.sessionID;\n  let myquery = {\n    sessionID: id\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        res.send(result.friends);\n        db.close();\n      } else {\n        console.log(\"no result found!\");\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om inloggad vill vi ha åtkomst till vänner profil\n// params = session ID och användarID(användar Id för vän)\n// identifierar användarID för sessionID, kollar om användarID(för vän) har \n// användarID (från sessionID) som vän. \n// Om inte vän, returnera status\n// annars returna följande\n// returnerar namn OCH alla meddelanden som skall vara på väggen för vän\n\nrouter.post('/friends/:userID', (req, res) => {\n  let user = req.params.userID;\n  let id = req.body.sessionID;\n  let myquery = {\n    sessionID: id\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        //kolla om användarIDet finns i results.friends array\n        //om det finns hämta väggen för användarIDet\n        if (result.friends.find(element => element == user)) {\n          let userquery = {\n            userID: user\n          };\n          dbo.collection(\"users\").findOne(userquery, function (err, result) {\n            if (err) {\n              res.sendStatus(500);\n            } else if (result != null) {\n              res.send({\n                \"wall\": result.wall,\n                \"userID\": result.userID\n              });\n            } else {\n              console.log(\"no result found!\");\n              res.sendStatus(500);\n              db.close();\n            }\n          });\n        }\n      } else {\n        console.log(\"no result found!\");\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om inloggad och är på egen profil\n// params = session ID\n// om sessionID inte matchar, returna status\n// annars returnera följande:\n// returnerar namn OCH alla meddelanden som skall vara på väggen för en själv\n\nrouter.post('/', (req, res) => {\n  let id = req.body.sessionID;\n  let myquery = {\n    sessionID: id\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        res.send({\n          \"wall\": result.wall,\n          \"userID\": result.userID\n        });\n      } else {\n        console.log(\"no result found!\");\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om sökning sker med specifikt namn\n// params = sträng\n// matcha mot strängen + regex som tillåter sökningen att var inkomplett (t.ex. \n// Ro ska matcha mot Robin). Matchning baseras på användarID\n// retunerar alla användare som matchar strängen + regex\n\nrouter.get('/search/:id', (req, res) => {\n  let id = req.params.id;\n  let myquery = {\n    userID: {\n      $regex: id\n    }\n  }; //behöver mer specifikt uttryck\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").find(myquery).toArray(function (err, result) {\n      console.log(result);\n\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        let userList = [];\n\n        for (let i = 0; i < result.length; i++) {\n          userList.push(result[i].userID);\n        }\n\n        res.send(userList);\n      } else {\n        console.log(\"no result found!\");\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om inloggad och vill toggla en vänförfrågning via knapptryck\n// params = session ID, användarID\n// Om ej togglad, bli togglad, lägg till användarID (för sessionID) som pending invite\n// till användarID (för vn). \n// Om togglad ta bort användar ID (från sessionID) som pending invite för användarID \n// returnar status (om ok kan knappen bli icheckad/avcheckad)\n//Kolla om redan vänner\n//Kolla om \n\nrouter.patch('/request/:userID', (req, res) => {\n  let user = req.params.userID;\n  let requester = req.body.sessionID;\n  let myquery = {\n    sessionID: requester\n  };\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\"); //HITTAR REQUESTER, \n\n    dbo.collection(\"users\").findOne(myquery, function (err, result) {\n      if (err) {\n        res.sendStatus(500);\n      } else if (result != null) {\n        //Kollar om requester redan är vän med user\n        if (result.friends.find(element => element == user)) {\n          db.close();\n          res.sendStatus(500);\n        } else {\n          let myquery = {\n            userID: user\n          };\n          let requesterUserID = result.userID;\n          dbo.collection(\"users\").findOne(myquery, function (err, result) {\n            if (err) {\n              res.sendStatus(500);\n            } else if (result != null) {\n              if (result.requests.find(element => element == requesterUserID)) {\n                //uppdatera requests och kör updateOne på user\n                result.requests; //TA BORT requestUserID från denna\n                //sen ska vi uppdatera användaren i databasen\n              } else {//lägg till i requests och kör updateOne på user\n              }\n            } else {\n              console.log(\"no result found!\");\n              res.sendStatus(500);\n              db.close();\n            }\n          });\n        }\n      } else {\n        console.log(\"no result found!\");\n        res.sendStatus(500);\n        db.close();\n      }\n    });\n  });\n}); // Om inloggad och vill acceptera/neka vänförfrågan\n// params = sessionID, användarID (person som skickad förfrågan), bool\n// om true acceptera vänförfrågan och lägg till användarID i friends\n// om false neka vänförfrågan\n// ta bort pending invite från sessionID. \n// return status (ok t.ex.)\n//--------------------------------------------------------------------\n//Logged in and posting msg\n\nrouter.post('/friends/:userID/msg', (req, res) => {\n  console.log(req.body);\n\n  if (validateMsg(req.body)) {\n    msg = sanitize(req.body);\n    const regex = new RegExp(/<script>/); //injection?\n\n    if (!regex.test(msg)) {\n      let user = req.params.userID;\n      let id = req.body.sessionID;\n      let myquery = {\n        sessionID: id\n      };\n      MongoClient.connect(url, (err, db) => {\n        let dbo = db.db(\"tvitter\");\n        dbo.collection(\"users\").findOne(myquery, function (err, result) {\n          if (err) {\n            res.sendStatus(500);\n          } else if (result != null) {\n            if (result.friends.find(element => element == user)) {\n              let userquery = {\n                userID: user\n              };\n              dbo.collection(\"users\").findOne(userquery, function (err, result) {\n                if (err) {\n                  res.sendStatus(500);\n                } else if (result != null) {\n                  //add msg to friends wall\n                  dbo.collection('wall').insertOne(msg, function (err, result) {\n                    if (err) {\n                      throw err;\n                    } else {\n                      db.close();\n                      res.sendStatus(200);\n                    }\n                  });\n                } else {\n                  console.log(\"no result found!\");\n                  res.sendStatus(500);\n                  db.close();\n                }\n              });\n            }\n          }\n        });\n      });\n    }\n  }\n\n  res.sendStatus(500);\n});\n\nfunction validateMsg(body) {\n  if (body.msg.length === 0 || body.msg.length > 140) {\n    return false;\n  } // if (!(typeof(body.id) === \"string\"))                        { return false }\n  // if (typeof(body.state) !== \"boolean\")                 { return false }\n\n\n  return true;\n} // params = sessionID, användarID/sessionID, msg\n// om har tillåtelse att posta, lägg till meddelande på vägg med tid\n// och sender. Meddelanden är objekt i databsen som består av msg, time och sender\n// returnerar en status (och kanske relaod på page)\n\n\napp.use(function (req, res) {\n  //console.log(\"found it\")\n  res.send(\"Sorry can't find that!\", 404);\n});\nmodule.exports = router;\n/*använd asynkrona anrop för att hämta och lagra data. \nKan ta in en resolve och reject funktion. \nMed detta kan vi skicka rätt felmeddelanden.\nen backend fil som hanterar logik\nen testfil som representerar klient-logiken \n(alltså om vi klickar på en knapp kommer meddelande x\nskickas t.ex)*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "router",
        "Router",
        "MongoClient",
        "sanitize",
        "v1",
        "uuidv1",
        "v4",
        "uuidv4",
        "url",
        "use",
        "json",
        "urlencoded",
        "extended",
        "post",
        "req",
        "res",
        "username",
        "body",
        "pw",
        "password",
        "myquery",
        "userID",
        "connect",
        "err",
        "db",
        "dbo",
        "collection",
        "findOne",
        "result",
        "sendStatus",
        "sessionIDvalue",
        "newSessionID",
        "$set",
        "sessionID",
        "updateOne",
        "result2",
        "close",
        "status",
        "send",
        "id",
        "newUser",
        "wall",
        "friends",
        "requests",
        "insertOne",
        "patch",
        "console",
        "log",
        "user",
        "params",
        "find",
        "element",
        "userquery",
        "get",
        "$regex",
        "toArray",
        "userList",
        "i",
        "length",
        "push",
        "requester",
        "requesterUserID",
        "validateMsg",
        "msg",
        "regex",
        "RegExp",
        "test",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
      "sourcesContent": [
        "var express = require('express');\nconst app = express();\nvar router = express.Router();\nconst {MongoClient} = require('mongodb');\nlet sanitize = require('mongo-sanitize');\nconst { \n  v1: uuidv1,\n  v4: uuidv4,\n} = require('uuid');\nlet url = \"mongodb://localhost:27017/\";\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n\n// Om användaren loggar in,\n// params = användarnamn, hashat lösenord\n// kolla om användarnamn finns, om det finns, kolla om hashat lösenord matchar\n// om det matchar, returnera ett nytt sessionID, lägg även till nytt sessionID\n// i databasen.\n// om inte finns returnera status, baserat på status skriv felmeddelane. \n// returnerna en session ID/Token\n\nrouter.post(\"/login\", (req, res) => {\n  let username = req.body.username;\n  let pw = req.body.password;\n  let myquery = { userID: username, password: pw}\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        \n        //Skapar sessionID\n        let sessionIDvalue = uuidv4();\n        let newSessionID = { $set: {sessionID: sessionIDvalue} };\n        \n        dbo.collection(\"users\").updateOne(myquery, newSessionID, function(err, result2) {\n          if (err) {\n            db.close();\n            res.sendStatus(500)\n          }\n          else {\n            db.close()\n            res.status(200).send(sessionIDvalue)\n          }\n        });\n      } \n      else {\n        //If we dont find a result\n        res.sendStatus(500)\n        db.close();\n      }\n    })\n  })\n})\n\n\n// Om användaren registerar sig,\n// params = användarnamn, hasht lösenord\n// kolla om användarnamn finns, om det finns returna fel, annnars lägg till\n// användare.\n// returnear status (ok)\nrouter.post(\"/register\", (req, res) => {\n\n  let username = req.body.username;\n  let pw = req.body.password;\n  let myquery = { userID: username}\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        //Det finns redan en användare med namnet\n        res.sendStatus(500)\n        db.close();\n      } \n      else {\n        //skapa användarobjekt\n        let id = uuidv4();\n        let newUser = {userID: username, password: pw, wall: [], friends: [], requests: [], sessionID: id}\n        dbo.collection('users').insertOne(newUser, function(err, result) {\n          if (err) {throw err}\n          else {\n            db.close();\n            res.sendStatus(200)\n          }\n        });\n      }\n    })\n  })\n})\n/\n// Om användare loggar ut\n// params = session ID\n// ta bort session ID, returna status\n// returnarar status (ok)\nrouter.patch(\"/logout\", (req, res) => {\n  let id = req.body.sessionID;\n  let myquery = { sessionID: id}\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        console.log(\"1\")\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        console.log(\"2\")\n        let sessionIDvalue = uuidv4();\n        let newSessionID = { $set: {sessionID: sessionIDvalue} };\n        dbo.collection(\"users\").updateOne(myquery, newSessionID, function(err, result2) {\n          if (err) {\n            console.log(\"3\")\n            db.close();\n            res.sendStatus(500)\n          }\n          else {\n            console.log(\"we here\")\n            db.close()\n            res.sendStatus(200)\n          }\n        });\n\n      } \n      else {\n        //If we dont find a result\n        console.log(result)\n        res.status(500).send(\"nothing found!\")\n        db.close();\n      }\n    })\n  })\n})\n\n\n// Om inloggad, vill vi ha en friendlist på sidan\n// params = session ID\n// hämtar alla vänner baserat på session ID\n// returnerar en lista på alla vänner\n\nrouter.post(('/friends'), (req, res) => {\n  let id = req.body.sessionID;\n  let myquery = { sessionID: id}\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        res.send(result.friends)\n        db.close();\n\n      } \n      else {\n        console.log(\"no result found!\")\n        res.sendStatus(500)\n        db.close();\n      }\n    })\n    \n  })\n})\n\n\n// Om inloggad vill vi ha åtkomst till vänner profil\n// params = session ID och användarID(användar Id för vän)\n// identifierar användarID för sessionID, kollar om användarID(för vän) har \n// användarID (från sessionID) som vän. \n// Om inte vän, returnera status\n// annars returna följande\n// returnerar namn OCH alla meddelanden som skall vara på väggen för vän\n\nrouter.post(('/friends/:userID'), (req, res) => {\n\n  let user = req.params.userID;\n  let id = req.body.sessionID;\n  let myquery = { sessionID: id}\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        //kolla om användarIDet finns i results.friends array\n        //om det finns hämta väggen för användarIDet\n\n        if(result.friends.find(element => element == user)) {\n          let userquery = { userID: user}\n          dbo.collection(\"users\").findOne(userquery, function(err, result) {\n            if (err) {\n              res.sendStatus(500)\n            } \n            else if (result != null) {\n              res.send({ \"wall\" : result.wall, \"userID\" : result.userID})\n            } \n            else {\n              console.log(\"no result found!\")\n              res.sendStatus(500)\n              db.close();\n            }\n          })\n        }\n      } \n      else {\n        console.log(\"no result found!\")\n        res.sendStatus(500)\n        db.close();\n      }\n    })\n    \n  })\n})\n\n\n// Om inloggad och är på egen profil\n// params = session ID\n// om sessionID inte matchar, returna status\n// annars returnera följande:\n// returnerar namn OCH alla meddelanden som skall vara på väggen för en själv\nrouter.post(('/'), (req, res) => {\n\n  let id = req.body.sessionID;\n  let myquery = { sessionID: id}\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        res.send({ \"wall\" : result.wall, \"userID\" : result.userID})\n      } \n      else {\n        console.log(\"no result found!\")\n        res.sendStatus(500)\n        db.close();\n      }\n    })\n  })\n})\n\n// Om sökning sker med specifikt namn\n// params = sträng\n// matcha mot strängen + regex som tillåter sökningen att var inkomplett (t.ex. \n// Ro ska matcha mot Robin). Matchning baseras på användarID\n// retunerar alla användare som matchar strängen + regex\nrouter.get(('/search/:id'), (req, res) => {\n\n  let id = req.params.id;\n  let myquery = { userID: {$regex: id}} //behöver mer specifikt uttryck\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    dbo.collection(\"users\").find(myquery).toArray(function (err, result) {\n      console.log(result)\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        let userList = [];\n        for (let i = 0; i < result.length; i++) {\n          userList.push(result[i].userID)\n        }\n        res.send(userList);\n      } \n      else {\n        console.log(\"no result found!\")\n        res.sendStatus(500)\n        db.close();\n      }\n    })\n  })\n})\n\n\n\n// Om inloggad och vill toggla en vänförfrågning via knapptryck\n// params = session ID, användarID\n// Om ej togglad, bli togglad, lägg till användarID (för sessionID) som pending invite\n// till användarID (för vn). \n// Om togglad ta bort användar ID (från sessionID) som pending invite för användarID \n// returnar status (om ok kan knappen bli icheckad/avcheckad)\n\n//Kolla om redan vänner\n//Kolla om \n\nrouter.patch(('/request/:userID'), (req, res) => {\n\n  let user = req.params.userID;\n  let requester = req.body.sessionID;\n  let myquery = { sessionID: requester };\n\n  MongoClient.connect(url, (err, db) => {\n    let dbo = db.db(\"tvitter\");\n    \n    //HITTAR REQUESTER, \n    dbo.collection(\"users\").findOne(myquery, function(err, result) {\n      if (err) {\n        res.sendStatus(500)\n      } \n      else if (result != null) {\n        //Kollar om requester redan är vän med user\n        if(result.friends.find(element => element == user)) {\n          db.close();\n          res.sendStatus(500);\n        }\n        else {\n          let myquery = { userID: user };\n          let requesterUserID = result.userID;\n          dbo.collection(\"users\").findOne(myquery, function(err, result) {\n            if (err) {\n              res.sendStatus(500)\n            } \n            else if (result != null) {\n              if(result.requests.find(element => element == requesterUserID)) {\n                //uppdatera requests och kör updateOne på user\n                result.requests //TA BORT requestUserID från denna\n                //sen ska vi uppdatera användaren i databasen\n              }\n\n              else {\n                //lägg till i requests och kör updateOne på user\n              }\n\n            }\n            else {\n              console.log(\"no result found!\")\n              res.sendStatus(500)\n              db.close();\n            }\n          });\n        }\n      }\n      else {\n        console.log(\"no result found!\")\n        res.sendStatus(500)\n        db.close();\n      }\n\n    });\n    \n  })\n\n})\n// Om inloggad och vill acceptera/neka vänförfrågan\n// params = sessionID, användarID (person som skickad förfrågan), bool\n// om true acceptera vänförfrågan och lägg till användarID i friends\n// om false neka vänförfrågan\n// ta bort pending invite från sessionID. \n// return status (ok t.ex.)\n\n//--------------------------------------------------------------------\n//Logged in and posting msg\nrouter.post('/friends/:userID/msg', (req, res) => {\n  console.log(req.body)\n  if (validateMsg(req.body)) {\n    msg = sanitize(req.body)\n    const regex = new RegExp(/<script>/)  //injection?\n    if (!regex.test(msg)) {\n      let user = req.params.userID;\n      let id = req.body.sessionID;\n      let myquery = { sessionID: id}\n\n      MongoClient.connect(url, (err, db) => {\n        let dbo = db.db(\"tvitter\");\n        dbo.collection(\"users\").findOne(myquery, function(err, result) {\n          if (err) {\n            res.sendStatus(500)\n          } \n          else if (result != null) { \n            if(result.friends.find(element => element == user)) {\n              let userquery = { userID: user}\n              dbo.collection(\"users\").findOne(userquery, function(err, result) {\n                if (err) {\n                  res.sendStatus(500)\n                } \n                else if (result != null) {\n                  //add msg to friends wall\n                  dbo.collection('wall').insertOne(msg, function(err, result) {\n                    if (err) {throw err}\n                    else {\n                      db.close();\n                      res.sendStatus(200)\n                    }\n                  })\n                } \n                else {\n                  console.log(\"no result found!\")\n                  res.sendStatus(500)\n                  db.close();\n                }\n              })\n            }\n          }\n        })\n      })\n    }\n  }\n  res.sendStatus(500)\n})\n\nfunction validateMsg(body) {\n  if (body.msg.length === 0 || body.msg.length > 140) { return false }\n  // if (!(typeof(body.id) === \"string\"))                        { return false }\n  // if (typeof(body.state) !== \"boolean\")                 { return false }\n  return true\n}\n// params = sessionID, användarID/sessionID, msg\n// om har tillåtelse att posta, lägg till meddelande på vägg med tid\n// och sender. Meddelanden är objekt i databsen som består av msg, time och sender\n// returnerar en status (och kanske relaod på page)\n\n\n\n\napp.use(function (req, res) {\n  //console.log(\"found it\")\n  res.send(\"Sorry can't find that!\", 404)\n})\n\n\nmodule.exports = router;\n\n\n/*använd asynkrona anrop för att hämta och lagra data. \nKan ta in en resolve och reject funktion. \nMed detta kan vi skicka rätt felmeddelanden.\nen backend fil som hanterar logik\nen testfil som representerar klient-logiken \n(alltså om vi klickar på en knapp kommer meddelande x\nskickas t.ex)*/\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1633605868238
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"filename\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/users.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/users.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/users.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "var express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXJCOztBQUNBLElBQUlDLE1BQU0sR0FBR0YsT0FBTyxDQUFDRyxNQUFSLEVBQWI7QUFFQTs7QUFDQUQsTUFBTSxDQUFDRSxHQUFQLENBQVcsR0FBWCxFQUFnQixVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ3ZDRCxFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBUyx5QkFBVDtBQUNELENBRkQ7QUFJQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92aW5haDMzMS9EZXNrdG9wL3RkcDAxMy9wcm9qZWt0L2JhY2tFbmQvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/routes/",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1631534435311
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"filename\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vinah331/Desktop/tdp013/projekt/backEnd\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/vinah331/Desktop/tdp013/projekt/backEnd",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const cors = require('cors');\n\nconst corsOptions = {\n  origin: '*'\n  /*file:///home/vinah331/Desktop/tdp013/lab3/main.html'*/\n  ,\n  optionsSuccessStatus: 200,\n  methods: ['GET', 'POST', 'PATCH']\n};\nmodule.exports = cors(corsOptions);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvcnMiLCJyZXF1aXJlIiwiY29yc09wdGlvbnMiLCJvcmlnaW4iLCJvcHRpb25zU3VjY2Vzc1N0YXR1cyIsIm1ldGhvZHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUdBLE1BQU1DLFdBQVcsR0FBRztBQUNoQkMsRUFBQUEsTUFBTSxFQUFFO0FBQUc7QUFESztBQUVoQkMsRUFBQUEsb0JBQW9CLEVBQUUsR0FGTjtBQUdoQkMsRUFBQUEsT0FBTyxFQUFFLENBQUMsS0FBRCxFQUFRLE1BQVIsRUFBZ0IsT0FBaEI7QUFITyxDQUFwQjtBQU1BQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLElBQUksQ0FBQ0UsV0FBRCxDQUFyQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92aW5haDMzMS9EZXNrdG9wL3RkcDAxMy9wcm9qZWt0L2JhY2tFbmQvY29ycy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuXG5cbmNvbnN0IGNvcnNPcHRpb25zID0ge1xuICAgIG9yaWdpbjogJyonLypmaWxlOi8vL2hvbWUvdmluYWgzMzEvRGVza3RvcC90ZHAwMTMvbGFiMy9tYWluLmh0bWwnKi8sXG4gICAgb3B0aW9uc1N1Y2Nlc3NTdGF0dXM6IDIwMCwgXG4gICAgbWV0aG9kczogWydHRVQnLCAnUE9TVCcsICdQQVRDSCddXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNvcnMoY29yc09wdGlvbnMpXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "cors",
        "require",
        "corsOptions",
        "origin",
        "optionsSuccessStatus",
        "methods",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAGA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,MAAM,EAAE;AAAG;AADK;AAEhBC,EAAAA,oBAAoB,EAAE,GAFN;AAGhBC,EAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB;AAHO,CAApB;AAMAC,MAAM,CAACC,OAAP,GAAiBP,IAAI,CAACE,WAAD,CAArB",
      "sourceRoot": "/home/vinah331/Desktop/tdp013/projekt/backEnd/cors/",
      "sourcesContent": [
        "const cors = require('cors');\n\n\nconst corsOptions = {\n    origin: '*'/*file:///home/vinah331/Desktop/tdp013/lab3/main.html'*/,\n    optionsSuccessStatus: 200, \n    methods: ['GET', 'POST', 'PATCH']\n};\n\nmodule.exports = cors(corsOptions)\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1632659863106
  }
}